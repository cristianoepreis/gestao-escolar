package com.ufbra.gestaoescolar.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CursoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCursoAllPropertiesEquals(Curso expected, Curso actual) {
        assertCursoAutoGeneratedPropertiesEquals(expected, actual);
        assertCursoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCursoAllUpdatablePropertiesEquals(Curso expected, Curso actual) {
        assertCursoUpdatableFieldsEquals(expected, actual);
        assertCursoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCursoAutoGeneratedPropertiesEquals(Curso expected, Curso actual) {
        assertThat(expected)
            .as("Verify Curso auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCursoUpdatableFieldsEquals(Curso expected, Curso actual) {
        assertThat(expected)
            .as("Verify Curso relevant properties")
            .satisfies(e -> assertThat(e.getNome()).as("check nome").isEqualTo(actual.getNome()))
            .satisfies(e -> assertThat(e.getDescricao()).as("check descricao").isEqualTo(actual.getDescricao()))
            .satisfies(e -> assertThat(e.getDuracao()).as("check duracao").isEqualTo(actual.getDuracao()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCursoUpdatableRelationshipsEquals(Curso expected, Curso actual) {
        assertThat(expected)
            .as("Verify Curso relationships")
            .satisfies(e -> assertThat(e.getAlunos()).as("check alunos").isEqualTo(actual.getAlunos()));
    }
}
