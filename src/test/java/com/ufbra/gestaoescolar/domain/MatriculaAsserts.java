package com.ufbra.gestaoescolar.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MatriculaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMatriculaAllPropertiesEquals(Matricula expected, Matricula actual) {
        assertMatriculaAutoGeneratedPropertiesEquals(expected, actual);
        assertMatriculaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMatriculaAllUpdatablePropertiesEquals(Matricula expected, Matricula actual) {
        assertMatriculaUpdatableFieldsEquals(expected, actual);
        assertMatriculaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMatriculaAutoGeneratedPropertiesEquals(Matricula expected, Matricula actual) {
        assertThat(expected)
            .as("Verify Matricula auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMatriculaUpdatableFieldsEquals(Matricula expected, Matricula actual) {
        assertThat(expected)
            .as("Verify Matricula relevant properties")
            .satisfies(e -> assertThat(e.getDataDeMatricula()).as("check dataDeMatricula").isEqualTo(actual.getDataDeMatricula()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMatriculaUpdatableRelationshipsEquals(Matricula expected, Matricula actual) {
        assertThat(expected)
            .as("Verify Matricula relationships")
            .satisfies(e -> assertThat(e.getAluno()).as("check aluno").isEqualTo(actual.getAluno()))
            .satisfies(e -> assertThat(e.getCurso()).as("check curso").isEqualTo(actual.getCurso()));
    }
}
