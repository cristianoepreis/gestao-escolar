package com.ufbra.gestaoescolar.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class NotaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNotaAllPropertiesEquals(Nota expected, Nota actual) {
        assertNotaAutoGeneratedPropertiesEquals(expected, actual);
        assertNotaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNotaAllUpdatablePropertiesEquals(Nota expected, Nota actual) {
        assertNotaUpdatableFieldsEquals(expected, actual);
        assertNotaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNotaAutoGeneratedPropertiesEquals(Nota expected, Nota actual) {
        assertThat(expected)
            .as("Verify Nota auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNotaUpdatableFieldsEquals(Nota expected, Nota actual) {
        assertThat(expected)
            .as("Verify Nota relevant properties")
            .satisfies(e -> assertThat(e.getPontuacao()).as("check pontuacao").isEqualTo(actual.getPontuacao()))
            .satisfies(e -> assertThat(e.getData()).as("check data").isEqualTo(actual.getData()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNotaUpdatableRelationshipsEquals(Nota expected, Nota actual) {
        assertThat(expected)
            .as("Verify Nota relationships")
            .satisfies(e -> assertThat(e.getDisciplina()).as("check disciplina").isEqualTo(actual.getDisciplina()))
            .satisfies(e -> assertThat(e.getAluno()).as("check aluno").isEqualTo(actual.getAluno()));
    }
}
