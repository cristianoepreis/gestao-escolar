package com.ufbra.gestaoescolar.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EmentaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmentaAllPropertiesEquals(Ementa expected, Ementa actual) {
        assertEmentaAutoGeneratedPropertiesEquals(expected, actual);
        assertEmentaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmentaAllUpdatablePropertiesEquals(Ementa expected, Ementa actual) {
        assertEmentaUpdatableFieldsEquals(expected, actual);
        assertEmentaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmentaAutoGeneratedPropertiesEquals(Ementa expected, Ementa actual) {
        assertThat(expected)
            .as("Verify Ementa auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmentaUpdatableFieldsEquals(Ementa expected, Ementa actual) {
        assertThat(expected)
            .as("Verify Ementa relevant properties")
            .satisfies(e -> assertThat(e.getDescricao()).as("check descricao").isEqualTo(actual.getDescricao()))
            .satisfies(e -> assertThat(e.getBibliografiaBasica()).as("check bibliografiaBasica").isEqualTo(actual.getBibliografiaBasica()))
            .satisfies(e ->
                assertThat(e.getBibliografiaComplementar())
                    .as("check bibliografiaComplementar")
                    .isEqualTo(actual.getBibliografiaComplementar())
            )
            .satisfies(e ->
                assertThat(e.getPraticaLaboratorial()).as("check praticaLaboratorial").isEqualTo(actual.getPraticaLaboratorial())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmentaUpdatableRelationshipsEquals(Ementa expected, Ementa actual) {
        assertThat(expected)
            .as("Verify Ementa relationships")
            .satisfies(e -> assertThat(e.getProfessor()).as("check professor").isEqualTo(actual.getProfessor()))
            .satisfies(e -> assertThat(e.getCurso()).as("check curso").isEqualTo(actual.getCurso()))
            .satisfies(e -> assertThat(e.getDisciplina()).as("check disciplina").isEqualTo(actual.getDisciplina()));
    }
}
